<launch>
  <!-- argument declaration -->
  <arg name = "cmd_src" default = "none" 
  description = "publish cmd_vel using the circle node: circle,
  publish cmd_vel using teleop: teleop, disable nodes that publish cmd_vel: none" />

  <arg name = "robot" default = "nusim" 
  description = "use the nusim simulator: nusim,
  use the real turtlebot3: localhost, disable additional nodes: none" />

  <arg name = "use_rviz" default = "false" 
  description = "launch rviz: true,
  don't launch rviz: false" />

  <!-- cmd vel publisher -->
  <group if="$(eval '\'$(var cmd_src)\' == \'teleop\'')">
  <node pkg="teleop_twist_keyboard" exec="teleop_twist_keyboard"
  output="screen" launch-prefix="xterm -e" />
  </group>

  <!-- Publish static transform between nusim/world and map-->
  <node pkg = "tf2_ros" exec="static_transform_publisher" 
  args = " --frame-id nusim/world --child-frame-id map" />


  <!-- simulator -->
  <group if="$(eval '\'$(var robot)\' == \'nusim\' and \'$(var use_rviz)\' == \'true\'')">
    <arg name = "rviz_config" default = "$(find-pkg-share nuslam)/config/temp_sim.rviz" 
    description = "Name of the rviz configuration file relative to the project's share directory" />
    <!-- rviz will enable us to see the robot -->
    <node pkg="rviz2" exec="rviz2" args="-d $(var rviz_config)"/>
    <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py">
      <arg name="color" value="red" />
      <arg name="use_rviz" value="false" />
    </include>
    <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py">
      <arg name="color" value="green" />
      <arg name="use_rviz" value="false" />
      <!-- <arg name="use_jsp" value="false" /> -->
    </include>
    <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py">
      <arg name="color" value="blue" />
      <arg name="use_rviz" value="false" />
      <arg name="use_jsp" value="false" />
    </include>
    <node pkg="nusim" exec="nusim" output="screen">
      <param from="$(find-pkg-share nuturtle_description)/config/diff_params.yaml" />
      <param from="$(find-pkg-share nusim)/config/basic_world.yaml" />
      <param name="input_noise" value="0.01" />
      <param name="slip_fraction" value="0.1" />
      <param name="basic_sensor_variance" value="0.00" />
      <param name="max_range" value="1.0" />
      <param name="lidar_noise" value="0.001" /> 
      <param name="lidar_resolution" value="0.001" />       
    </node>
    <node
        pkg='nuslam'
        exec='slam'
        args = "--remap joint_states:=blue/joint_states">
        <param from="$(find-pkg-share nuturtle_description)/config/diff_params.yaml" />
        <param from="$(find-pkg-share nusim)/config/basic_world.yaml" />  
        <param name="body_id" value = "green/base_footprint" />
        <param name = "wheel_left" value = "wheel_left_joint" />
        <param name = "wheel_right" value = "wheel_right_joint" />
        <param name = "use_data_association" value = "true" />
        <param name = "process_noise_covariance" value = "0.1" />
        <param name = "measurement_sensor_noise_covariance" value = "0.01" />
    </node>
    <node
      pkg='nuturtle_control'
      exec='turtle_control' 
      args = " --remap wheel_cmd:=red/wheel_cmd --remap sensor_data:=red/sensor_data 
      --remap joint_states:=blue/joint_states" >
      <param from="$(find-pkg-share nuturtle_description)/config/diff_params.yaml" />
    </node>
    <node
      pkg='nuslam'
      exec='landmarks'>
      <param from="$(find-pkg-share nuturtle_description)/config/diff_params.yaml" />
    </node>
  </group>
</launch>
